name: Automate Book Content Generation

on:
  push:
    branches:
      - main
jobs:
  build:
    runs-on: ubuntu-latest
    env:
      COHERE_API_KEY: ${{ secrets.COHERE_API_KEY }}  # ✅ Securely using secrets

    steps:
      - name: Checkout repo
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'
  
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install requests
          pip install --no-cache-dir cohere
          pip install -r requirements.txt || true
          pip install moviepy imageio imageio-ffmpeg unidecode jsonschema || true  # ✅ Added missing dependencies
  
      - name: Debug Python env (for sanity check)
        run: |
          which python
          python --version
          pip list
  
      - name: Run book fetching script
        run: python fetch_books.py  # ✅ Ensuring book data is fetched first
      
      - name: Run summarization script
        run: python summarize.py  # ✅ Processing summaries from book data
  
      - name: Run voice generation script
        run: python voice_generator.py  # ✅ Generating audio files from summaries
  
      - name: Run video generation script
        run: python video_generator.py  # ✅ Creating videos using generated voices
  
      - name: Upload generated voices
        uses: actions/upload-artifact@v4
        with:
          name: generated-voices
          path: voices/
  
      - name: Upload generated videos
        uses: actions/upload-artifact@v4
        with:
          name: generated-videos
          path: videos/
  
      - name: Upload generated summaries
        uses: actions/upload-artifact@v4
        with:
          name: generated-summaries
          path: data/summaries.json  # ✅ Saving summaries for verification
  
      - name: Upload fetched books
        uses: actions/upload-artifact@v4
        with:
          name: fetched-books
          path: data/books.json  # ✅ Uploading raw book data for debugging
